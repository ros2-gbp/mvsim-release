%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/iron/.*$
%global __requires_exclude_from ^/opt/ros/iron/.*$

Name:           ros-iron-mvsim
Version:        0.11.0
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS mvsim package

License:        BSD
URL:            https://wiki.ros.org/mvsim
Source0:        %{name}-%{version}.tar.gz

Requires:       boost-devel
Requires:       boost-python%{python3_pkgversion}-devel
Requires:       cppzmq-devel
Requires:       protobuf-compiler
Requires:       protobuf-devel
Requires:       pybind11-devel
Requires:       python3-libs
Requires:       python3-pip
Requires:       python3-protobuf
Requires:       ros-iron-mrpt-libgui
Requires:       ros-iron-mrpt-libmaps
Requires:       ros-iron-mrpt-libposes
Requires:       ros-iron-mrpt-libros-bridge
Requires:       ros-iron-mrpt-libtclap
Requires:       ros-iron-nav-msgs
Requires:       ros-iron-ros2launch
Requires:       ros-iron-sensor-msgs
Requires:       ros-iron-stereo-msgs
Requires:       ros-iron-tf2
Requires:       ros-iron-tf2-geometry-msgs
Requires:       ros-iron-visualization-msgs
Requires:       unzip
Requires:       wget
Requires:       ros-iron-ros-workspace
BuildRequires:  boost-devel
BuildRequires:  boost-python%{python3_pkgversion}-devel
BuildRequires:  cmake3
BuildRequires:  cppzmq-devel
BuildRequires:  protobuf-compiler
BuildRequires:  protobuf-devel
BuildRequires:  pybind11-devel
BuildRequires:  python3-libs
BuildRequires:  python3-pip
BuildRequires:  python3-protobuf
BuildRequires:  ros-iron-ament-cmake
BuildRequires:  ros-iron-ament-cmake-gmock
BuildRequires:  ros-iron-ament-cmake-gtest
BuildRequires:  ros-iron-ament-cmake-xmllint
BuildRequires:  ros-iron-mrpt-libgui
BuildRequires:  ros-iron-mrpt-libmaps
BuildRequires:  ros-iron-mrpt-libposes
BuildRequires:  ros-iron-mrpt-libros-bridge
BuildRequires:  ros-iron-mrpt-libtclap
BuildRequires:  ros-iron-nav-msgs
BuildRequires:  ros-iron-ros-environment
BuildRequires:  ros-iron-sensor-msgs
BuildRequires:  ros-iron-stereo-msgs
BuildRequires:  ros-iron-tf2
BuildRequires:  ros-iron-tf2-geometry-msgs
BuildRequires:  ros-iron-visualization-msgs
BuildRequires:  unzip
BuildRequires:  wget
BuildRequires:  ros-iron-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%if 0%{?with_tests}
BuildRequires:  ros-iron-ament-lint-auto
BuildRequires:  ros-iron-ament-lint-common
%endif

%description
A lightweight multivehicle simulation framework.

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/iron" \
    -DAMENT_PREFIX_PATH="/opt/ros/iron" \
    -DCMAKE_PREFIX_PATH="/opt/ros/iron" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/iron/setup.sh" ]; then . "/opt/ros/iron/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/iron

%changelog
* Sat Oct 12 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.11.0-1
- Autogenerated by Bloom

* Wed Aug 28 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.10.0-1
- Autogenerated by Bloom

* Wed May 08 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.4-1
- Autogenerated by Bloom

* Wed Apr 24 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.3-1
- Autogenerated by Bloom

* Thu Mar 21 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.2-1
- Autogenerated by Bloom

* Tue Mar 05 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.1-1
- Autogenerated by Bloom

* Tue Mar 05 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.0-2
- Autogenerated by Bloom

* Sat Mar 02 2024 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.9.0-1
- Autogenerated by Bloom

* Tue Dec 05 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.8.3-1
- Autogenerated by Bloom

* Fri Oct 06 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.8.2-1
- Autogenerated by Bloom

* Thu Sep 07 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.8.1-1
- Autogenerated by Bloom

* Sat Sep 02 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.8.0-1
- Autogenerated by Bloom

* Wed Aug 30 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.7.4-1
- Autogenerated by Bloom

* Wed Aug 23 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.7.3-1
- Autogenerated by Bloom

* Sat Aug 12 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.7.2-1
- Autogenerated by Bloom

* Sun Jun 11 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.7.1-1
- Autogenerated by Bloom

* Mon May 22 2023 Jose-Luis Blanco-Claraco <jlblanco@ual.es> - 0.7.0-1
- Autogenerated by Bloom

